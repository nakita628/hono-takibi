openapi: 3.0.3
info:
  title: Extended A–G Reference API
  version: 1.0.3
paths:
  /test:
    get:
      summary: Returns complex structure using schemas A–G
      responses:
        '200':
          description: Deeply structured response (A–G only)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Root'
components:
  schemas:
    Root:
      type: object
      properties:
        flatRefs:
          type: object
          properties:
            A: { $ref: '#/components/schemas/A' }
            B: { $ref: '#/components/schemas/B' }
            C: { $ref: '#/components/schemas/C' }
            D: { $ref: '#/components/schemas/D' }
            E: { $ref: '#/components/schemas/E' }
            F: { $ref: '#/components/schemas/F' }
            G: { $ref: '#/components/schemas/G' }
        nestedGroups:
          type: object
          properties:
            group1:
              type: object
              properties:
                a: { $ref: '#/components/schemas/A' }
                b: { $ref: '#/components/schemas/B' }
                c: { $ref: '#/components/schemas/C' }
            group2:
              type: object
              properties:
                d: { $ref: '#/components/schemas/D' }
                e: { $ref: '#/components/schemas/E' }
            group3:
              type: object
              properties:
                f: { $ref: '#/components/schemas/F' }
                g: { $ref: '#/components/schemas/G' }
        deepChain:
          type: object
          properties:
            A:
              type: object
              allOf:
                - $ref: '#/components/schemas/A'
                - type: object
                  properties:
                    B:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/B'
                        - type: object
                          properties:
                            C:
                              type: object
                              allOf:
                                - $ref: '#/components/schemas/C'
                                - type: object
                                  properties:
                                    D:
                                      type: object
                                      allOf:
                                        - $ref: '#/components/schemas/D'
                                        - type: object
                                          properties:
                                            E:
                                              type: object
                                              allOf:
                                                - $ref: '#/components/schemas/E'
                                                - type: object
                                                  properties:
                                                    F:
                                                      type: object
                                                      allOf:
                                                        - $ref: '#/components/schemas/F'
                                                        - type: object
                                                          properties:
                                                            G:
                                                              $ref: '#/components/schemas/G'
        oneOfRefs:
          oneOf:
            - $ref: '#/components/schemas/A'
            - $ref: '#/components/schemas/D'
            - $ref: '#/components/schemas/G'
        anyOfRefs:
          anyOf:
            - $ref: '#/components/schemas/C'
            - type: object
              properties:
                nested:
                  $ref: '#/components/schemas/F'
        allOfRefs:
          allOf:
            - $ref: '#/components/schemas/B'
            - $ref: '#/components/schemas/E'
            - type: object
              properties:
                extra:
                  $ref: '#/components/schemas/G'
        arrayRefs:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/F'
              - $ref: '#/components/schemas/G'
        recursiveStructure:
          type: object
          properties:
            nodes:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/A'
                  - type: object
                    properties:
                      children:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/B'
                            - type: object
                              properties:
                                sub:
                                  $ref: '#/components/schemas/C'

    A:
      type: object
      properties:
        id: { type: string }
        tags:
          type: array
          items:
            type: string

    B:
      type: object
      properties:
        name: { type: string }
        createdAt:
          type: string
          format: date-time

    C:
      type: object
      properties:
        value: { type: number }
        meta:
          type: object
          properties:
            source: { type: string }

    D:
      type: object
      properties:
        flag: { type: boolean }
        notes:
          type: array
          items:
            type: string

    E:
      type: object
      properties:
        status: { type: string }
        detail:
          type: object
          properties:
            count: { type: integer }

    F:
      type: object
      properties:
        code: { type: string }
        labels:
          type: array
          items:
            type: string

    G:
      type: object
      properties:
        summary: { type: string }
        attributes:
          type: object
          properties:
            weight: { type: number }
            visible: { type: boolean }
